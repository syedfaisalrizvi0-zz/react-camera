{"version":3,"sources":["camera-shutter-click.mp3","App.js","reportWebVitals.js","index.js"],"names":["clickSound","Audio","clickSoundfile","useStyles","makeStyles","theme","dialogBody","textAlign","videoBarContainer","position","top","bottom","width","height","overflow","videoBar","minWidth","minHeight","left","transform","bottomIconPallate","canvas","display","appBar","title","marginLeft","spacing","flex","bottomIconLeftPallate","right","previewBOx","imagePreview","maxWidth","maxHeight","listingBox","icon","color","countdown","heading","Transition","React","forwardRef","props","ref","Slide","direction","times","App","classes","useState","setSupport","isError","setIsError","track","setTrack","useRef","player","open","setOpen","pictureArr","setPictureArr","setSelectedImage","currentTimer","setCurrentTimer","handleClose","useEffect","pla","current","navigator","window","onfocus","onblur","mediaDevices","getUserMedia","video","then","stream","srcObject","getVideoTracks","catch","err","Typography","variant","className","Dialog","fullScreen","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","onClick","aria-label","length","Grid","container","item","xs","GridList","cellHeight","gridList","cols","map","tile","index","GridListTile","forcePreview","src","GridListTileBar","actionIcon","a","document","createElement","href","download","Math","random","click","forceDownload","GetAppRounded","autoPlay","inter","setInterval","console","log","ImageCapture","takePhoto","blob","createImageBitmap","imageBitmap","context","getContext","drawImage","old","toDataURL","play","clearInterval","translate","scale","Camera","fontSize","indexOf","Badge","badgeContent","children","Timer","Fab","component","gutterBottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.33178b92.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/camera-shutter-click.4008e954.mp3\";","import React, { useEffect,useRef,useState } from 'react';\nimport  makeStyles  from '@material-ui/core/styles/makeStyles';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport  Grid  from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport Badge from '@material-ui/core/Badge';\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\nimport { Camera, FontDownloadRounded, GetAppRounded, InsertChartRounded, Timer } from '@material-ui/icons';\nimport { Fab } from '@material-ui/core';\nimport  clickSoundfile from  './camera-shutter-click.mp3'; \nconst clickSound = new Audio(clickSoundfile);\nconst useStyles = makeStyles((theme) => ({\n  dialogBody:{\n    textAlign:'center'\n  },\n  videoBarContainer:{\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    width: '100%',\n    height: '100%', \n    overflow: 'hidden'\n  },\n  videoBar:{\n    minWidth: '100%',\n    minHeight: '100%',\n    width:\"auto\",\n    height:'auto',\n    position:'absolute',\n    top:'50%',\n    left:\"50%\",\n    transform:`translate(-50%,-50%) rotateY(180deg)`,\n  },\n  bottomIconPallate:{\n    position:'absolute',\n    bottom:'20px',\n    left:'39%'\n  },\n  canvas:{\n    display:'none'\n  },\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  bottomIconLeftPallate:{\n    position:\"absolute\",\n    bottom:'20px',\n    right:'8%'\n  },\n  previewBOx:{\n    overflow:'hidden'\n  },\n  imagePreview:{\n    maxWidth:'100%',\n    maxHeight:'100%'\n  },\n  listingBox:{\n    width:'auto',\n    height:'100vh',\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n  countdown:{\n    position:\"absolute\",\n    bottom:'50%',\n    right:'50%'\n  },\n  heading:{\n    position:'fixed',\n    top:'50%',\n  }\n}));\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst times =  [3,5,10];\nfunction App() {\n  const classes  = useStyles();\n  const [support,setSupport] = useState(false);\n  const [isError,setIsError] = useState(0);\n  var [track,setTrack] = useState({});\n  var  canvas =  useRef(null);\n  const player  = useRef({});\n  const [open, setOpen] = useState(false);\n  const [pictureArr,setPictureArr] = useState([]);\n  const [selectedImage,setSelectedImage] = useState(null);\n  const [currentTimer,setCurrentTimer] = useState(null);\n  const captureImage = ()=>{\n    if(currentTimer != null){\n      var countdown =currentTimer;\n      var inter = setInterval(() => {\n        console.log(currentTimer);\n        if(countdown <= 0){\n        new ImageCapture(track).takePhoto()\n        .then(blob => createImageBitmap(blob))\n        .then(imageBitmap => {\n          var width = 1000;\n          var context = canvas.current.getContext('2d');\n            canvas.current.width = width;\n            canvas.current.height = width;\n            context.drawImage(imageBitmap, 0, 0, width, width);\n            setPictureArr(old=>[...old,canvas.current.toDataURL('image/png')])\n          });\n          setCurrentTimer(null);\n          clickSound.play();\n          clearInterval(inter);\n        }\n        setCurrentTimer(countdown);\n        --countdown;\n      },1000);\n    }\n    else {\n      new ImageCapture(track).takePhoto()\n      .then(blob => createImageBitmap(blob))\n      .then(imageBitmap => {\n        var width = 1000;\n        var context = canvas.current.getContext('2d');\n        context.translate(width,0);\n        context.scale(-1,1);\n          canvas.current.width = width;\n          canvas.current.height = width;\n          context.drawImage(imageBitmap, 0, 0, width, width);\n          setPictureArr(old=>[...old,canvas.current.toDataURL('image/png')])\n        });\n        clickSound.play();\n    }\n  } \n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const forcePreview = (index)=>{\n    setSelectedImage(pictureArr[index]);\n  }\n  const forceDownload = (index) =>{\n    var a = document.createElement(\"a\"); //Create <a>\n    a.href = pictureArr[index]; //Image Base64 Goes here\n    a.download = Math.random()*100+'.png'; //File name Here\n    a.click();\n  }\n  const setupTimer = ()=>{\n    var index = times.indexOf(currentTimer);\n    if(index == -1){\n        setCurrentTimer(times[0]);\n    }\n    else if(index == times.length - 1){\n      setCurrentTimer(null);\n    }\n    else if(index >= 0 && index < times.length - 1){\n      setCurrentTimer(times[index+1]);\n    }\n     else {\n       setCurrentTimer(times[0]);\n     }\n  }\n  useEffect(()=>{\n    var pla  =  player.current;\n    setSupport('mediaDevices' in navigator);\n    window.onfocus = ()=>{\n      //pla.srcObject.getVideoTracks().forEach(track => track.stop());\n    }\n    window.onblur = ()=>{\n       //pla.srcObject.getVideoTracks().forEach(track => track.start());\n    }\n    navigator.mediaDevices.getUserMedia({video:true}).then((stream)=>{\n      pla.srcObject = stream;\n      setTrack(stream.getVideoTracks()[0]);\n    }).catch(err=>{\n      setIsError(true);\n    });\n  },[]);\n  return (\n    isError ? <Typography variant=\"h1\" className={classes.heading} >error while connecting camera</Typography>:\n    <div>\n       <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Pictures\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.dialogBody}>\n        {pictureArr.length == 0 ? <Typography variant=\"h1\" className={classes.heading} >Please add images </Typography> :\n          <Grid container>\n            <Grid item  xs={12} >\n              <div className={classes.listingBox} >\n                <GridList cellHeight={160} className={classes.gridList} cols={3}>\n                {pictureArr.map((tile,index) => (\n                  \n                  <GridListTile key={index} cols={tile.cols || 1} \n                  onClick={()=>{\n                    forcePreview(index);\n                  }}\n                  >\n                    <img src={tile} />\n                    <GridListTileBar \n                  actionIcon={\n                    <IconButton className={classes.icon}\n                    onClick={()=>{\n                      forceDownload(index)\n                    }}\n                    >\n                        <GetAppRounded />\n                    </IconButton>\n                  }\n                  >\n                  </GridListTileBar>\n                  </GridListTile>\n                ))}\n              </GridList> \n              </div> \n            </Grid>\n          </Grid>}\n      </div>\n      </Dialog>\n      <canvas className={classes.canvas} ref={canvas}></canvas>\n      <div className={classes.videoBarContainer} >\n      <video className={classes.videoBar} ref={player}  autoPlay ></video>\n      </div>\n      <div className={classes.bottomIconPallate}>\n        <Grid container spacing={2} >\n          <Grid item \n          onClick={captureImage}\n          >\n            <Camera fontSize=\"large\" />\n          </Grid>\n          <Grid item\n          onClick={setupTimer}   \n          >\n            <Badge badgeContent={currentTimer} color=\"secondary\" children={<Timer fontSize=\"large\" />} />\n          </Grid>\n        </Grid>\n      </div>\n      <div className={classes.bottomIconLeftPallate} >\n        <Fab color=\"secondary\"\n        onClick={handleClickOpen}\n        >\n          <Badge badgeContent={pictureArr.length} color=\"secondary\" children={<PhotoLibraryIcon />} />\n        </Fab>\n    </div>\n     { currentTimer ?  <div className={classes.countdown}>\n          <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n            {currentTimer}\n          </Typography>\n     </div> :\"\"}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}